import{_ as t,c as a,o as e,U as d}from"./chunks/framework.BZkFhLI2.js";const p=JSON.parse('{"title":"Introduction","description":"","frontmatter":{},"headers":[],"relativePath":"guide/index.md","filePath":"guide/index.md"}'),i={name:"guide/index.md"},f=d('<h1 id="introduction" tabindex="-1" data-v-e97fd3fb>Introduction <a class="header-anchor" href="#introduction" aria-label="Permalink to &quot;Introduction&quot;" data-v-e97fd3fb>​</a></h1><p data-v-e97fd3fb>Greetings!</p><p data-v-e97fd3fb>Gridify is an exceptional dynamic LINQ library designed to simplify the process of converting strings into LINQ queries. It offers remarkable performance and ease-of-use, making it effortless to apply filtering, sorting, and pagination utilizing text-based data.</p><h2 id="features" tabindex="-1" data-v-e97fd3fb>Features <a class="header-anchor" href="#features" aria-label="Permalink to &quot;Features&quot;" data-v-e97fd3fb>​</a></h2><p data-v-e97fd3fb>Here are some notable features of Gridify:</p><ul data-v-e97fd3fb><li data-v-e97fd3fb>Fast and user-friendly</li><li data-v-e97fd3fb>Supports filtering, sorting, and pagination</li><li data-v-e97fd3fb>Enables conversion from strings to LINQ queries</li><li data-v-e97fd3fb>Supports nested queries and sub-collections</li><li data-v-e97fd3fb>Allows mapping from strings to objects</li><li data-v-e97fd3fb>Supports query compilation</li><li data-v-e97fd3fb>Compatible with collection indexes</li><li data-v-e97fd3fb>Custom operators</li><li data-v-e97fd3fb>Can be used with any collection that supports LINQ</li><li data-v-e97fd3fb>Compatible with object-mappers like AutoMapper</li><li data-v-e97fd3fb>Compatible with ORMs, particularly <a href="./extensions/entityframework" data-v-e97fd3fb>Entity Framework</a></li><li data-v-e97fd3fb>Supports <a href="./extensions/elasticsearch" data-v-e97fd3fb>Elasticsearch</a> DSL query</li><li data-v-e97fd3fb>Javascript/Typescript <a href="./extensions/gridify-client" data-v-e97fd3fb>gridify-client</a></li></ul><h2 id="examples" tabindex="-1" data-v-e97fd3fb>Examples <a class="header-anchor" href="#examples" aria-label="Permalink to &quot;Examples&quot;" data-v-e97fd3fb>​</a></h2><p data-v-e97fd3fb>To provide a better understanding of Gridify&#39;s functionality, we have prepared a few examples:</p><ul data-v-e97fd3fb><li data-v-e97fd3fb><a href="./../example/api-controller" data-v-e97fd3fb>Using Gridify in API Controllers</a></li><li data-v-e97fd3fb>More examples coming soon...</li></ul><h2 id="performance" tabindex="-1" data-v-e97fd3fb>Performance <a class="header-anchor" href="#performance" aria-label="Permalink to &quot;Performance&quot;" data-v-e97fd3fb>​</a></h2><p data-v-e97fd3fb>Filtering is the most expensive feature in Gridify. The following benchmark compares filtering in various popular dynamic LINQ libraries. Interestingly, Gridify outperforms even Native LINQ in terms of speed. It&#39;s worth mentioning that other features like Pagination and Sorting in Gridify have minimal impact on performance.</p><table data-v-e97fd3fb><thead data-v-e97fd3fb><tr data-v-e97fd3fb><th data-v-e97fd3fb>Method</th><th style="text-align:right;" data-v-e97fd3fb>Mean</th><th style="text-align:right;" data-v-e97fd3fb>Error</th><th style="text-align:right;" data-v-e97fd3fb>StdDev</th><th style="text-align:right;" data-v-e97fd3fb>Ratio</th><th style="text-align:right;" data-v-e97fd3fb>Allocated</th><th style="text-align:right;" data-v-e97fd3fb>Alloc Ratio</th></tr></thead><tbody data-v-e97fd3fb><tr data-v-e97fd3fb><td data-v-e97fd3fb>Gridify</td><td style="text-align:right;" data-v-e97fd3fb>599.8 us</td><td style="text-align:right;" data-v-e97fd3fb>2.76 us</td><td style="text-align:right;" data-v-e97fd3fb>2.45 us</td><td style="text-align:right;" data-v-e97fd3fb>0.92</td><td style="text-align:right;" data-v-e97fd3fb>36.36 KB</td><td style="text-align:right;" data-v-e97fd3fb>1.11</td></tr><tr data-v-e97fd3fb><td data-v-e97fd3fb>Native_LINQ</td><td style="text-align:right;" data-v-e97fd3fb>649.9 us</td><td style="text-align:right;" data-v-e97fd3fb>2.55 us</td><td style="text-align:right;" data-v-e97fd3fb>2.38 us</td><td style="text-align:right;" data-v-e97fd3fb>1.00</td><td style="text-align:right;" data-v-e97fd3fb>32.74 KB</td><td style="text-align:right;" data-v-e97fd3fb>1.00</td></tr><tr data-v-e97fd3fb><td data-v-e97fd3fb>DynamicLinq</td><td style="text-align:right;" data-v-e97fd3fb>734.8 us</td><td style="text-align:right;" data-v-e97fd3fb>13.90 us</td><td style="text-align:right;" data-v-e97fd3fb>13.01 us</td><td style="text-align:right;" data-v-e97fd3fb>1.13</td><td style="text-align:right;" data-v-e97fd3fb>119.4 KB</td><td style="text-align:right;" data-v-e97fd3fb>3.65</td></tr><tr data-v-e97fd3fb><td data-v-e97fd3fb>Sieve</td><td style="text-align:right;" data-v-e97fd3fb>1,190.9 us</td><td style="text-align:right;" data-v-e97fd3fb>7.41 us</td><td style="text-align:right;" data-v-e97fd3fb>6.93 us</td><td style="text-align:right;" data-v-e97fd3fb>1.83</td><td style="text-align:right;" data-v-e97fd3fb>53.05 KB</td><td style="text-align:right;" data-v-e97fd3fb>1.62</td></tr><tr data-v-e97fd3fb><td data-v-e97fd3fb>Fop</td><td style="text-align:right;" data-v-e97fd3fb>2,637.6 us</td><td style="text-align:right;" data-v-e97fd3fb>8.59 us</td><td style="text-align:right;" data-v-e97fd3fb>7.61 us</td><td style="text-align:right;" data-v-e97fd3fb>4.06</td><td style="text-align:right;" data-v-e97fd3fb>321.57 KB</td><td style="text-align:right;" data-v-e97fd3fb>9.82</td></tr><tr data-v-e97fd3fb><td data-v-e97fd3fb>CSharp_Scripting</td><td style="text-align:right;" data-v-e97fd3fb>216,863.8 us</td><td style="text-align:right;" data-v-e97fd3fb>4,295.66 us</td><td style="text-align:right;" data-v-e97fd3fb>6,021.92 us</td><td style="text-align:right;" data-v-e97fd3fb>336.64</td><td style="text-align:right;" data-v-e97fd3fb>23660.26 KB</td><td style="text-align:right;" data-v-e97fd3fb>722.71</td></tr></tbody></table><details class="details custom-block" data-v-e97fd3fb><summary data-v-e97fd3fb>Details</summary><p data-v-e97fd3fb>BenchmarkDotNet v0.13.10, Windows 11 (10.0.22621.2715/22H2/2022Update/SunValley2) 12th Gen Intel Core i7-12800H, 1 CPU, 20 logical and 14 physical cores .NET SDK 8.0.100 [Host] : .NET 8.0.0 (8.0.23.53103), X64 RyuJIT AVX2</p><p data-v-e97fd3fb>This Benchmark is available <a href="https://github.com/alirezanet/Gridify/blob/master/benchmark/LibraryComparisionFilteringBenchmark.cs" target="_blank" rel="noreferrer" data-v-e97fd3fb>Here</a></p></details>',13),r=[f];function l(s,n,o,b,g,h){return e(),a("div",null,r)}const c=t(i,[["render",l],["__scopeId","data-v-e97fd3fb"]]);export{p as __pageData,c as default};
